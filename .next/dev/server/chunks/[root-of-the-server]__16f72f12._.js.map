{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/kenna/KH25/Main/lib/mock-data.ts"],"sourcesContent":["import type { Account, Transaction, Insight, FraudAlert, AutomationRule, AgentTask, AuditLog } from \"./types\"\n\nexport const mockAccounts: Account[] = [\n  {\n    id: \"acc_001\",\n    institution: \"Chase\",\n    nickname: \"Main Checking\",\n    last4: \"4829\",\n    type: \"checking\",\n    currency: \"USD\",\n    balanceCurrent: 12847.32,\n    balanceAvailable: 12847.32,\n    status: \"active\",\n  },\n  {\n    id: \"acc_002\",\n    institution: \"Bank of America\",\n    nickname: \"Savings\",\n    last4: \"7621\",\n    type: \"savings\",\n    currency: \"USD\",\n    balanceCurrent: 45230.18,\n    balanceAvailable: 45230.18,\n    status: \"active\",\n  },\n  {\n    id: \"acc_003\",\n    institution: \"Capital One\",\n    nickname: \"Rewards Card\",\n    last4: \"3492\",\n    type: \"credit\",\n    currency: \"USD\",\n    balanceCurrent: -2184.67,\n    balanceAvailable: 7815.33,\n    status: \"active\",\n  },\n  {\n    id: \"acc_004\",\n    institution: \"Ally Bank\",\n    nickname: \"Emergency Fund\",\n    last4: \"9103\",\n    type: \"savings\",\n    currency: \"USD\",\n    balanceCurrent: 18500.0,\n    balanceAvailable: 18500.0,\n    status: \"active\",\n  },\n]\n\nexport const mockTransactions: Transaction[] = [\n  {\n    id: \"txn_001\",\n    accountId: \"acc_001\",\n    date: \"2025-10-22\",\n    merchant: \"UBER *TRIP\",\n    amount: -18.72,\n    currency: \"USD\",\n    category: \"Transport/Rideshare\",\n    labels: [\"recurring:false\", \"channel:in_app\"],\n    status: \"posted\",\n    agent: {\n      categoryConfidence: 0.86,\n      fraudScore: 0.12,\n      explanations: [\"Matches historical rideshare pattern\"],\n    },\n    raw: {\n      plaidTransactionId: \"plaid_txn_001\",\n      mcc: \"4121\",\n      location: \"San Francisco, CA\",\n      channel: \"online\",\n    },\n  },\n  {\n    id: \"txn_002\",\n    accountId: \"acc_003\",\n    date: \"2025-10-21\",\n    merchant: \"Amazon.com\",\n    amount: -127.45,\n    currency: \"USD\",\n    category: \"Shopping/Online\",\n    labels: [\"recurring:false\", \"channel:online\"],\n    status: \"posted\",\n    agent: {\n      categoryConfidence: 0.94,\n      fraudScore: 0.08,\n      explanations: [\"Frequent merchant\", \"Normal amount range\"],\n    },\n    raw: {\n      plaidTransactionId: \"plaid_txn_002\",\n      mcc: \"5942\",\n      channel: \"online\",\n    },\n  },\n  {\n    id: \"txn_003\",\n    accountId: \"acc_001\",\n    date: \"2025-10-21\",\n    merchant: \"Whole Foods Market\",\n    amount: -84.32,\n    currency: \"USD\",\n    category: \"Food & Dining/Groceries\",\n    labels: [\"recurring:false\", \"channel:pos\"],\n    status: \"posted\",\n    agent: {\n      categoryConfidence: 0.91,\n      fraudScore: 0.05,\n      explanations: [\"Regular grocery pattern\", \"Expected location\"],\n    },\n    raw: {\n      plaidTransactionId: \"plaid_txn_003\",\n      mcc: \"5411\",\n      location: \"Palo Alto, CA\",\n      channel: \"pos\",\n    },\n  },\n  {\n    id: \"txn_004\",\n    accountId: \"acc_003\",\n    date: \"2025-10-20\",\n    merchant: \"LUXURY ELECTRONICS INT\",\n    amount: -2849.99,\n    currency: \"USD\",\n    category: \"Shopping/Electronics\",\n    labels: [\"recurring:false\", \"channel:online\", \"flagged\"],\n    status: \"posted\",\n    agent: {\n      categoryConfidence: 0.72,\n      fraudScore: 0.87,\n      explanations: [\"New merchant\", \"High amount\", \"Unusual time (3:42 AM)\"],\n    },\n    raw: {\n      plaidTransactionId: \"plaid_txn_004\",\n      mcc: \"5732\",\n      location: \"Unknown\",\n      channel: \"online\",\n    },\n  },\n  {\n    id: \"txn_005\",\n    accountId: \"acc_001\",\n    date: \"2025-10-20\",\n    merchant: \"Starbucks\",\n    amount: -6.75,\n    currency: \"USD\",\n    category: \"Food & Dining/Coffee\",\n    labels: [\"recurring:true\", \"channel:pos\"],\n    status: \"posted\",\n    agent: {\n      categoryConfidence: 0.98,\n      fraudScore: 0.02,\n      explanations: [\"Daily recurring pattern\", \"Known location\"],\n    },\n    raw: {\n      plaidTransactionId: \"plaid_txn_005\",\n      mcc: \"5814\",\n      location: \"San Francisco, CA\",\n      channel: \"pos\",\n    },\n  },\n  {\n    id: \"txn_006\",\n    accountId: \"acc_001\",\n    date: \"2025-10-19\",\n    merchant: \"Netflix\",\n    amount: -15.99,\n    currency: \"USD\",\n    category: \"Entertainment/Streaming\",\n    labels: [\"recurring:true\", \"subscription\", \"channel:online\"],\n    status: \"posted\",\n    agent: {\n      categoryConfidence: 0.99,\n      fraudScore: 0.01,\n      explanations: [\"Monthly subscription\", \"Expected billing date\"],\n    },\n    raw: {\n      plaidTransactionId: \"plaid_txn_006\",\n      mcc: \"4899\",\n      channel: \"online\",\n    },\n  },\n  {\n    id: \"txn_007\",\n    accountId: \"acc_002\",\n    date: \"2025-10-18\",\n    merchant: \"Payroll Deposit - ACME Corp\",\n    amount: 4250.0,\n    currency: \"USD\",\n    category: \"Income/Salary\",\n    labels: [\"recurring:true\", \"income\"],\n    status: \"posted\",\n    agent: {\n      categoryConfidence: 1.0,\n      fraudScore: 0.0,\n      explanations: [\"Bi-weekly payroll pattern\"],\n    },\n    raw: {\n      plaidTransactionId: \"plaid_txn_007\",\n      channel: \"ach\",\n    },\n  },\n  {\n    id: \"txn_008\",\n    accountId: \"acc_001\",\n    date: \"2025-10-17\",\n    merchant: \"Shell Gas Station\",\n    amount: -52.18,\n    currency: \"USD\",\n    category: \"Transport/Gas\",\n    labels: [\"recurring:false\", \"channel:pos\"],\n    status: \"posted\",\n    agent: {\n      categoryConfidence: 0.89,\n      fraudScore: 0.06,\n      explanations: [\"Regular gas station pattern\"],\n    },\n    raw: {\n      plaidTransactionId: \"plaid_txn_008\",\n      mcc: \"5541\",\n      location: \"San Jose, CA\",\n      channel: \"pos\",\n    },\n  },\n]\n\nexport const mockInsights: Insight[] = [\n  {\n    id: \"ins_001\",\n    title: \"Dining spend 32% above 3-month average\",\n    metricDelta: 0.32,\n    confidence: 0.81,\n    why: [\"Higher weekend frequency\", \"Average ticket up 18%\", \"New restaurants added\"],\n    cta: {\n      label: \"Set $250 dining budget\",\n      action: \"create_budget\",\n      params: { category: \"dining\", amount: 250 },\n    },\n  },\n  {\n    id: \"ins_002\",\n    title: \"Potential savings: Switch to annual Netflix\",\n    metricDelta: -0.15,\n    confidence: 0.92,\n    why: [\"Annual plan saves $32/year\", \"Consistent usage pattern\"],\n    cta: {\n      label: \"View subscription options\",\n      action: \"view_subscriptions\",\n    },\n  },\n  {\n    id: \"ins_003\",\n    title: \"Cashflow projection: Shortfall on Nov 15\",\n    metricDelta: -0.24,\n    confidence: 0.76,\n    why: [\"Current burn rate: $2,840/mo\", \"Upcoming bills: $1,200\", \"Buffer below threshold\"],\n    cta: {\n      label: \"Move $400 to checking\",\n      action: \"transfer_funds\",\n      params: { amount: 400 },\n    },\n  },\n  {\n    id: \"ins_004\",\n    title: \"3 subscriptions unused in 60 days\",\n    metricDelta: 0.0,\n    confidence: 0.88,\n    why: [\"No activity detected\", \"Total cost: $47/month\"],\n    cta: {\n      label: \"Review subscriptions\",\n      action: \"review_subscriptions\",\n    },\n  },\n]\n\nexport const mockFraudAlerts: FraudAlert[] = [\n  {\n    id: \"alert_001\",\n    severity: \"high\",\n    riskScore: 0.87,\n    reasonCodes: [\"new_merchant\", \"high_amount\", \"unusual_time\"],\n    evidenceTxnIds: [\"txn_004\"],\n    status: \"new\",\n    merchant: \"LUXURY ELECTRONICS INT\",\n    amount: 2849.99,\n    date: \"2025-10-20\",\n  },\n  {\n    id: \"alert_002\",\n    severity: \"medium\",\n    riskScore: 0.64,\n    reasonCodes: [\"geo_velocity\", \"new_device\"],\n    evidenceTxnIds: [\"txn_002\"],\n    status: \"ack\",\n    merchant: \"Amazon.com\",\n    amount: 127.45,\n    date: \"2025-10-21\",\n  },\n  {\n    id: \"alert_003\",\n    severity: \"low\",\n    riskScore: 0.42,\n    reasonCodes: [\"unusual_category\"],\n    evidenceTxnIds: [\"txn_001\"],\n    status: \"resolved\",\n    merchant: \"UBER *TRIP\",\n    amount: 18.72,\n    date: \"2025-10-22\",\n  },\n]\n\nexport const mockAutomationRules: AutomationRule[] = [\n  {\n    id: \"rule_001\",\n    enabled: true,\n    name: \"High-value transaction alert\",\n    trigger: {\n      type: \"transaction_created\",\n      conditions: [{ field: \"amount\", op: \">\", value: 500 }],\n    },\n    actions: [{ type: \"create_alert\", severity: \"high\" }],\n    createdBy: \"admin\",\n    version: 1,\n  },\n  {\n    id: \"rule_002\",\n    enabled: true,\n    name: \"New merchant notification\",\n    trigger: {\n      type: \"transaction_created\",\n      conditions: [{ field: \"merchant\", op: \"is_new\", value: true }],\n    },\n    actions: [{ type: \"notify_user\" }],\n    createdBy: \"admin\",\n    version: 1,\n  },\n]\n\nexport const mockAgentTasks: AgentTask[] = [\n  {\n    id: \"task_001\",\n    agent: \"advisor\",\n    status: \"in-progress\",\n    description: \"Analyzing spending patterns for October\",\n    timestamp: \"2025-10-24T10:32:00Z\",\n  },\n  {\n    id: \"task_002\",\n    agent: \"fraud\",\n    status: \"completed\",\n    description: \"Risk assessment for txn_004\",\n    timestamp: \"2025-10-24T09:15:00Z\",\n  },\n  {\n    id: \"task_003\",\n    agent: \"automation\",\n    status: \"pending\",\n    description: \"Evaluating rule_001 on new transactions\",\n    timestamp: \"2025-10-24T10:45:00Z\",\n  },\n]\n\nexport const mockAuditLogs: AuditLog[] = [\n  {\n    id: \"log_001\",\n    timestamp: \"2025-10-24T10:32:15Z\",\n    agent: \"Fraud Agent\",\n    action: \"Alert Created\",\n    details: \"High-risk transaction detected: LUXURY ELECTRONICS INT ($2,849.99)\",\n    userId: \"system\",\n  },\n  {\n    id: \"log_002\",\n    timestamp: \"2025-10-24T09:18:42Z\",\n    agent: \"Advisor Agent\",\n    action: \"Insight Generated\",\n    details: \"Dining spend analysis completed with 81% confidence\",\n    userId: \"system\",\n  },\n  {\n    id: \"log_003\",\n    timestamp: \"2025-10-23T14:22:10Z\",\n    agent: \"Automation Agent\",\n    action: \"Rule Executed\",\n    details: \"rule_001 triggered for transaction txn_004\",\n    userId: \"system\",\n  },\n]\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file:///Users/kenna/KH25/Main/app/api/accounts/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\nimport { mockAccounts } from \"@/lib/mock-data\"\n\nexport async function GET() {\n  // Simulate network delay\n  await new Promise((resolve) => setTimeout(resolve, 300))\n  return NextResponse.json(mockAccounts)\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IACpB,yBAAyB;IACzB,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;IACnD,OAAO,+RAAY,CAAC,IAAI,CAAC,qJAAY;AACvC","debugId":null}}]
}